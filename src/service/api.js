import axios from "axios";

// üëâ T·∫°o axios instance v·ªõi c·∫•u h√¨nh chung
const API = axios.create({
  baseURL: import.meta.env.VITE_API_URL, // ho·∫∑c import.meta.env.VITE_API_URL n·∫øu d√πng Vite
  // baseURL: "https://conkin.vn/ebay-express/api/",
  withCredentials: true, // g·ª≠i cookie refreshToken
});

// üëâ Interceptor: G·∫Øn accessToken & X-Device-Id v√†o m·ªçi request
API.interceptors.request.use((config) => {
  const token = localStorage.getItem("token");
  let deviceId = localStorage.getItem("deviceId");

  // N·∫øu ch∆∞a c√≥ deviceId th√¨ t·∫°o v√† l∆∞u
  if (!deviceId || deviceId === "undefined") {
    deviceId = crypto.randomUUID();
    localStorage.setItem("deviceId", deviceId);
  }

  // G·∫Øn DeviceId
  config.headers["X-Device-Id"] = deviceId;

  // Kh√¥ng g·∫Øn token n·∫øu l√† login ho·∫∑c refresh
  const isPublic =
    config.url?.includes("/auth/login") ||
    config.url?.includes("/auth/refresh");

  if (!isPublic && token && token !== "undefined") {
    config.headers.Authorization = `Bearer ${token}`;
  }

  return config;
});

export default API;
